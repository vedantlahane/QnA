version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/qna.db
      - UPLOAD_DIR=./uploads
      - VECTOR_STORE_PATH=./vector_store
      - LOG_LEVEL=INFO
      - DEBUG=true
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
      - backend_vector_store:/app/vector_store
      - backend_data:/app/data
      - backend_logs:/app/logs
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    networks:
      - qna_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - qna_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - qna_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - qna_network
    restart: unless-stopped

volumes:
  backend_uploads:
  backend_vector_store:
  backend_data:
  backend_logs:
  redis_data:

networks:
  qna_network:
    driver: bridge
